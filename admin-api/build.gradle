buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'

    // querydsl 추가
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'java'

    id "org.asciidoctor.convert" version "1.5.9.2"
}

apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.tsp'
version '0.0.1-SNAPSHOT'
sourceCompatibility = "11"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // dependencies alphabet order
    annotationProcessor "org.projectlombok:lombok:1.18.22"
    annotationProcessor('org.projectlombok:lombok')
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    compile 'org.flywaydb:flyway-core:9.2.2'
    compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile 'org.springframework.security:spring-security-web:5.7.3'
    compile 'org.springframework.security:spring-security-config:5.7.3'
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    compileOnly "org.projectlombok:lombok:1.18.22"
    compileOnly 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation group: 'log4j', name: 'log4j', version: '1.2.16'
    implementation 'junit:junit:4.13.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '1.0.0'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

    providedRuntime 'org.springframework.boot:spring-boot-starter'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    runtimeOnly 'mysql:mysql-connector-java'

    testAnnotationProcessor('org.projectlombok:lombok')
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

// build시 junit 제외
test {
    exclude '**/*'
    outputs.dir snippetsDir
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor

    from file("build/asciidoc/html5/")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

/** * comileQuerydsl.doFirst 추가 */
compileQuerydsl.doFirst {
    if (file(querydslDir).exists()) delete(file(querydslDir))
}

// API 문서(html) 생성 Task
asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}
//querydsl 추가 끝
